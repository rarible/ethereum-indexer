openapi: 3.0.3
info:
  title: OpenAPI definition
  version: v0

paths:

  ###################### Ownerships ######################

  "/v0.1/ownerships/{ownershipId}":
    get:
      tags:
        - nft-order-ownership-controller
      operationId: getNftOrderOwnershipById
      description: Returns order ownership by ownership address
      parameters:
        - name: ownershipId
          description: "Address of the NFT ownership"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NftOrderOwnership"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/ownerships/byItem":
    get:
      tags:
        - nft-order-ownership-controller
      operationId: getNftOrderOwnershipsByItem
      description: Returns order ownership by item address
      parameters:
        - name: contract
          description: "Address of the contract"
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/Address"
        - name: tokenId
          description: "Token identifier"
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/BigInteger"
        - name: continuation
          description: "Continuation value from the previous response"
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: "The number of items to return"
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/NftOrderOwnershipsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/ownerships/all":
    get:
      tags:
        - nft-order-ownership-controller
      operationId: getNftOrderAllOwnerships
      description: Returns all orders with ownerships
      parameters:
        - name: continuation
          description: "Continuation value from the previous response"
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: "The number of items to return"
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/NftOrderOwnershipsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ###################### Lazy Mint ######################

  "/v0.1/mints":
    post:
      tags:
        - nft-order-lazy-mint-controller
      description: Lazy mint of NFT
      operationId: mintNftOrderAsset
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LazyNft"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NftOrderItem"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ###################### Items ######################

  "/v0.1/items/{itemId}":
    get:
      tags:
        - nft-order-item-controller
      operationId: getNftOrderItemById
      description: Returns order item by item identifier
      parameters:
        - name: itemId
          description: "Item identifier, has format `contract:tokenId`"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NftOrderItem"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/{itemId}/meta":
    get:
      tags:
        - nft-order-item-controller
      operationId: getNftOrderItemMetaById
      description: Returns order item meta by item identifier
      parameters:
        - name: itemId
          description: "Item identifier, has format `contract:tokenId`"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NftItemMeta"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/{itemId}/lazy":
    get:
      tags:
        - nft-order-item-controller
      operationId: getNftOrderLazyItemById
      description: Returns lazy order item by item identifier
      parameters:
        - name: itemId
          description: "Item identifier, has format `contract:tokenId`"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LazyNft"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/byOwner":
    get:
      tags:
        - nft-order-item-controller
      operationId: getNftOrderItemsByOwner
      description: Returns order items by owner
      parameters:
        - name: owner
          description: "Address of the item owner"
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/Address"
        - name: continuation
          description: "Continuation value from the previous response"
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: "The number of items to return"
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/NftOrderItemsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/byCreator":
    get:
      tags:
        - nft-order-item-controller
      operationId: getNftOrderItemsByCreator
      description: Returns order items by creator
      parameters:
        - name: creator
          description: "Address of the item creator"
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/Address"
        - name: continuation
          description: "Continuation value from the previous response"
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: "The number of items to return"
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/NftOrderItemsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/byCollection":
    get:
      tags:
        - nft-order-item-controller
      operationId: getNftOrderItemsByCollection
      description: Returns order items by collection address
      parameters:
        - name: collection
          description: "Address of the NFT collection"
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/Address"
        - name: continuation
          description: "Continuation value from the previous response"
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: "The number of items to return"
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/NftOrderItemsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/all":
    get:
      tags:
        - nft-order-item-controller
      operationId: getNftOrderAllItems
      description: Returns all orders items
      parameters:
        - name: continuation
          description: "Continuation value from the previous response"
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: "The number of items to return"
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: showDeleted
          description: "Include deleted items"
          in: query
          required: false
          schema:
            type: boolean
        - name: lastUpdatedFrom
          description: "From what time the items were updated. Integer in unix format"
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: lastUpdatedTo
          description: "To what time the items were updated. Integer in unix format"
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          $ref: "#/components/responses/NftOrderItemsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ###################### Activities ######################

  "/v0.1/activities/byUser":
    get:
      tags:
        - nft-order-activity-controller
      operationId: getNftOrderActivitiesByUser
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActivityFilterByUserType"
        - name: user
          in: query
          required: true
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Address"
        - name: from
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: to
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/ActivitySort"
      responses:
        '200':
          $ref: "#/components/responses/NftOrderActivityPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/activities/byItem":
    get:
      tags:
        - nft-order-activity-controller
      operationId: getNftOrderActivitiesByItem
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActivityFilterByItemType"
        - name: contract
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/Address"
        - name: tokenId
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/BigInteger"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/ActivitySort"
      responses:
        '200':
          $ref: "#/components/responses/NftOrderActivityPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/activities/byCollection":
    get:
      tags:
        - nft-order-activity-controller
      operationId: getNftOrderActivitiesByCollection
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActivityFilterByCollectionType"
        - name: collection
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/Address"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/ActivitySort"
      responses:
        '200':
          $ref: "#/components/responses/NftOrderActivityPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/activities/all":
    get:
      tags:
        - nft-order-activity-controller
      operationId: getNftOrderAllActivities
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActivityFilterAllType"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/ActivitySort"
      responses:
        '200':
          $ref: "#/components/responses/NftOrderActivityPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ###################### Collections ######################

  "/v0.1/collections/{collection}/generate_token_id":
    get:
      tags:
        - nft-order-collection-controller
      description: Returns next available tokenId for minter
      operationId: generateNftOrderTokenId
      parameters:
        - name: collection
          in: path
          description: "Address of the NFT collection"
          required: true
          schema:
            "$ref": "#/components/schemas/Address"
        - name: minter
          in: query
          description: "Minter address"
          required: true
          schema:
            "$ref": "#/components/schemas/Address"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NftTokenId"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/collections/{collection}":
    get:
      tags:
        - nft-order-collection-controller
      description: Returns collection by address
      operationId: getNftOrderCollectionById
      parameters:
        - name: collection
          description: "Address of the NFT collection"
          in: path
          required: true
          schema:
            "$ref": "#/components/schemas/Address"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NftCollection"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/collections/byOwner":
    get:
      tags:
        - nft-order-collection-controller
      description: Returns all collections by owner
      operationId: searchNftOrderCollectionsByOwner
      parameters:
        - name: owner
          in: query
          description: "Address of the collection owner"
          required: true
          schema:
            "$ref": "#/components/schemas/Address"
        - name: continuation
          description: "Continuation value from the previous response"
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: "The number of items to return"
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NftCollections"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/collections/all":
    get:
      tags:
        - nft-order-collection-controller
      description: Returns all collections
      operationId: searchNftOrderAllCollections
      parameters:
        - name: continuation
          description: "Continuation value from the previous response"
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: "The number of items to return"
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NftCollections"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

components:
  responses:
    NftOrderActivityPage:
      description: OK
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Activities"
    NftOrderOwnershipsPage:
      description: OK
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/NftOrderOwnershipsPage"
    NftOrderItemsPage:
      description: OK
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/NftOrderItemsPage"
