openapi: 3.0.3
info:
  title: OpenAPI definition
  version: v0.1

paths:

  ###################### Transactions ######################

  "/v0.1/transactions":
    post:
      tags:
        - nft-transaction-controller
      description: Create pending transaction for NFT
      operationId: createNftPendingTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTransactionRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogEvent"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ###################### Lazy Mint ######################

  "/v0.1/mints":
    post:
      tags:
        - nft-lazy-mint-controller
      description: Lazy mint of NFT
      operationId: mintNftAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LazyNft"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NftItem"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ###################### Activities ######################

  "/v0.1/activities/search":
    post:
      tags:
        - nft-activity-controller
      operationId: getNftActivities
      parameters:
        - name: continuation
          in: query
          description: continuation value from previous response
          required: false
          schema:
            type: string
        - name: size
          in: query
          description: how many items to return
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/ActivitySort"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NftActivityFilter"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NftActivities"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ###################### Ownerships ######################

  "/v0.1/ownerships/{ownershipId}":
    get:
      tags:
        - nft-ownership-controller
      operationId: getNftOwnershipById
      parameters:
        - name: ownershipId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NftOwnership"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/ownerships/byItem":
    get:
      tags:
        - nft-ownership-controller
      operationId: getNftOwnershipsByItem
      parameters:
        - name: contract
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/Address"
        - name: tokenId
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/BigInteger"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/NftOwnershipsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/ownerships/all":
    get:
      tags:
        - nft-ownership-controller
      operationId: getNftAllOwnerships
      parameters:
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/NftOwnershipsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ###################### Items ######################

  "/v0.1/items/{itemId}/meta":
    get:
      tags:
        - nft-item-controller
      operationId: getNftItemMetaById
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NftItemMeta"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/{itemId}/resetMeta":
    delete:
      tags:
        - nft-item-controller
      operationId: resetNftItemMetaById
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/{itemId}/lazy":
    get:
      tags:
        - nft-item-controller
      operationId: getNftLazyItemById
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LazyNft"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/{itemId}":
    get:
      tags:
        - nft-item-controller
      description: returns Item by identifier
      operationId: getNftItemById
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: includeMeta
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NftItem"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/byOwner":
    get:
      tags:
        - nft-item-controller
      operationId: getNftItemsByOwner
      parameters:
        - name: owner
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/Address"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: includeMeta
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          $ref: "#/components/responses/NftItemsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/byCreator":
    get:
      tags:
        - nft-item-controller
      operationId: getNftItemsByCreator
      parameters:
        - name: creator
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/Address"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: includeMeta
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          $ref: "#/components/responses/NftItemsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/byCollection":
    get:
      tags:
        - nft-item-controller
      operationId: getNftItemsByCollection
      parameters:
        - name: collection
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/Address"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: includeMeta
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          $ref: "#/components/responses/NftItemsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/items/all":
    get:
      tags:
        - nft-item-controller
      operationId: getNftAllItems
      parameters:
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: showDeleted
          in: query
          required: false
          schema:
            type: boolean
        - name: lastUpdatedFrom
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: lastUpdatedTo
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: includeMeta
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          $ref: "#/components/responses/NftItemsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ###################### Collections ######################

  "/v0.1/collections/{collection}/generate_token_id":
    get:
      tags:
        - nft-collection-controller
      description: Returns next available tokenId for minter
      operationId: generateNftTokenId
      parameters:
        - name: collection
          in: path
          description: collection address
          required: true
          schema:
            $ref: "#/components/schemas/Address"
        - name: minter
          in: query
          description: minter address
          required: true
          schema:
            $ref: "#/components/schemas/Address"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NftTokenId"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/collections/{collection}":
    get:
      tags:
        - nft-collection-controller
      description: Returns Collection by address
      operationId: getNftCollectionById
      parameters:
        - name: collection
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Address"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NftCollection"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/collections/byOwner":
    get:
      tags:
        - nft-collection-controller
      operationId: searchNftCollectionsByOwner
      parameters:
        - name: owner
          in: query
          description: owner of searching collections
          required: true
          schema:
            $ref: "#/components/schemas/Address"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/NftCollectionsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/collections/all":
    get:
      tags:
        - nft-collection-controller
      operationId: searchNftAllCollections
      parameters:
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/NftCollectionsPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

components:
  responses:
    NftOwnershipsPage:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NftOwnerships"
    NftCollectionsPage:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NftCollections"
    NftItemsPage:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NftItems"
