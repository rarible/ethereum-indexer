package com.rarible.protocol.order.listener.service.descriptors.exchange.opensea

import com.rarible.ethereum.domain.EthUInt256
import com.rarible.protocol.order.core.configuration.OrderIndexerProperties
import com.rarible.protocol.order.core.misc.toBinary
import com.rarible.protocol.order.core.model.OrderSideMatch
import com.rarible.protocol.order.core.model.Part
import com.rarible.protocol.order.core.model.SimpleTraceResult
import com.rarible.protocol.order.core.service.CallDataEncoder
import com.rarible.protocol.order.core.service.PriceNormalizer
import com.rarible.protocol.order.core.service.PriceUpdateService
import com.rarible.protocol.order.core.trace.TraceCallService
import com.rarible.protocol.order.core.trace.TransactionTraceProvider
import com.rarible.protocol.order.listener.service.opensea.OpenSeaOrderEventConverter
import com.rarible.protocol.order.listener.service.opensea.OpenSeaOrderParser
import io.daonomic.rpc.domain.Word
import io.mockk.coEvery
import io.mockk.mockk
import kotlinx.coroutines.flow.toList
import kotlinx.coroutines.reactive.asFlow
import kotlinx.coroutines.runBlocking
import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test
import scala.collection.JavaConverters
import scalether.domain.Address
import scalether.domain.response.Log
import scalether.domain.response.Transaction
import java.math.BigDecimal
import java.math.BigInteger
import java.time.Instant

class ExchangeWrapperUnitTest {

    private val traceProvider: TransactionTraceProvider = mockk()
    private val traceCallService: TraceCallService = TraceCallService(traceProvider, CallDataEncoder())
    private val priceUpdateService: PriceUpdateService = mockk()
    private val prizeNormalizer: PriceNormalizer = mockk()

    private val openSeaOrderParser = OpenSeaOrderParser(
        traceCallService = traceCallService,
        callDataEncoder = CallDataEncoder()
    )

    private val descriptor = WyvernExchangeOrderMatchDescriptor(
        exchangeContractAddresses = OrderIndexerProperties.ExchangeContractAddresses(
            v1 = Address.ZERO(),
            v1Old = null,
            v2 = Address.ZERO(),
            openSeaV1 = Address.ZERO(),
            openSeaV2 = Address.ZERO(),
            cryptoPunks = Address.ZERO(),
            zeroEx = Address.ZERO()
        ),
        openSeaOrdersSideMatcher = OpenSeaOrderEventConverter(
            priceUpdateService = priceUpdateService,
            prizeNormalizer = prizeNormalizer,
            callDataEncoder = CallDataEncoder()
        ),
        openSeaOrderParser = openSeaOrderParser
    )

    @Test
    fun `print Call Data`() = runBlocking {
        val withFeeString =
            "0x7ad2607e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000c40000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000b64ab834bab000000000000000000000000dd54d660178b28f6033a953b0e55073cfa7e374400000000000000000000000092ce36ceae648d6a57316cb67bd40199737c17a400000000000000000000000001656d41e041b50fc7c1eb270f7d891021937436000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045b594792a5cdc008d0de1c1d69faa3d16b3ddc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd54d660178b28f6033a953b0e55073cfa7e374400000000000000000000000001656d41e041b50fc7c1eb270f7d89102193743600000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c0107300000000000000000000000045b594792a5cdc008d0de1c1d69faa3d16b3ddc10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062406b0800000000000000000000000000000000000000000000000000000000632db961ba919330eac8d5ebca0addb6990ca632419a6be97d080eba240b0e074c4724db00000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062406b0800000000000000000000000000000000000000000000000000000000632db961ba919330eac8d5ebca0addb6990ca632419a6be97d080eba240b0e074c4724dba000000000000000000000000000000000000000000000000000000000000007c000000000000000000000000000000000000000000000000000000000000008e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000b40000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e59cff1ea75b0d93de6f08ebc7b51ede6b85d23b24c0d52d336762f82b167bc18f61b24eb2290ff0b9660b4e4e7a8da8d1cf3588493ca23934127c1e7ba5933b4771912bfddf60f2d7afaf79821605a9782933ab226beea4e3fbe6e0c81c58400000000000000000000000000000000000000000000000000000000000000e4fb16a59500000000000000000000000000000000000000000000000000000000000000000000000000000000000000004c9d38c11c1c72bdcb71199b82e8ba869599e099000000000000000000000000b552e0ddd94ea72dbc089619115c81529cd8ca700000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a59500000000000000000000000001656d41e041b50fc7c1eb270f7d8910219374360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b552e0ddd94ea72dbc089619115c81529cd8ca700000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe4000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc47846a7457660f1c585377cd173aa4811580ca31"

        val printer = CallDataPrinter()
        printer.printSinglePurchase(withFeeString.toBinary())
    }

    //        {transactionHash: "0xb6d567672748f02cf922e3c46a4afb8619f70adc700a35163c00729fa23826c2"}

    @Test
    fun `recover buy maker and origin fees in case input singlePurchase call data`() = runBlocking {
        val singlePurchaseString = "0x7ad2607e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000c40000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000b64ab834bab000000000000000000000000dd54d660178b28f6033a953b0e55073cfa7e374400000000000000000000000092ce36ceae648d6a57316cb67bd40199737c17a400000000000000000000000001656d41e041b50fc7c1eb270f7d891021937436000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045b594792a5cdc008d0de1c1d69faa3d16b3ddc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd54d660178b28f6033a953b0e55073cfa7e374400000000000000000000000001656d41e041b50fc7c1eb270f7d89102193743600000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c0107300000000000000000000000045b594792a5cdc008d0de1c1d69faa3d16b3ddc10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062406b0800000000000000000000000000000000000000000000000000000000632db961ba919330eac8d5ebca0addb6990ca632419a6be97d080eba240b0e074c4724db00000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062406b0800000000000000000000000000000000000000000000000000000000632db961ba919330eac8d5ebca0addb6990ca632419a6be97d080eba240b0e074c4724dba000000000000000000000000000000000000000000000000000000000000007c000000000000000000000000000000000000000000000000000000000000008e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000b40000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e59cff1ea75b0d93de6f08ebc7b51ede6b85d23b24c0d52d336762f82b167bc18f61b24eb2290ff0b9660b4e4e7a8da8d1cf3588493ca23934127c1e7ba5933b4771912bfddf60f2d7afaf79821605a9782933ab226beea4e3fbe6e0c81c58400000000000000000000000000000000000000000000000000000000000000e4fb16a59500000000000000000000000000000000000000000000000000000000000000000000000000000000000000004c9d38c11c1c72bdcb71199b82e8ba869599e099000000000000000000000000b552e0ddd94ea72dbc089619115c81529cd8ca700000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a59500000000000000000000000001656d41e041b50fc7c1eb270f7d8910219374360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b552e0ddd94ea72dbc089619115c81529cd8ca700000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe4000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000012c47846a7457660f1c585377cd173aa4811580ca31"
        executeTest(
            inputCallData = singlePurchaseString,
            traceCallData = singlePurchaseString
        )
    }

    @Test
    fun `recover buy maker and origin fees in case input atomicSwap call data`() = runBlocking {
        val atomicSwapString = "0xab834bab000000000000000000000000dd54d660178b28f6033a953b0e55073cfa7e374400000000000000000000000092ce36ceae648d6a57316cb67bd40199737c17a400000000000000000000000001656d41e041b50fc7c1eb270f7d891021937436000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045b594792a5cdc008d0de1c1d69faa3d16b3ddc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd54d660178b28f6033a953b0e55073cfa7e374400000000000000000000000001656d41e041b50fc7c1eb270f7d89102193743600000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c0107300000000000000000000000045b594792a5cdc008d0de1c1d69faa3d16b3ddc10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062406b0800000000000000000000000000000000000000000000000000000000632db961ba919330eac8d5ebca0addb6990ca632419a6be97d080eba240b0e074c4724db00000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062406b0800000000000000000000000000000000000000000000000000000000632db961ba919330eac8d5ebca0addb6990ca632419a6be97d080eba240b0e074c4724dba000000000000000000000000000000000000000000000000000000000000007c000000000000000000000000000000000000000000000000000000000000008e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000b40000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e59cff1ea75b0d93de6f08ebc7b51ede6b85d23b24c0d52d336762f82b167bc18f61b24eb2290ff0b9660b4e4e7a8da8d1cf3588493ca23934127c1e7ba5933b4771912bfddf60f2d7afaf79821605a9782933ab226beea4e3fbe6e0c81c58400000000000000000000000000000000000000000000000000000000000000e4fb16a59500000000000000000000000000000000000000000000000000000000000000000000000000000000000000004c9d38c11c1c72bdcb71199b82e8ba869599e099000000000000000000000000b552e0ddd94ea72dbc089619115c81529cd8ca700000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a59500000000000000000000000001656d41e041b50fc7c1eb270f7d8910219374360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b552e0ddd94ea72dbc089619115c81529cd8ca700000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
        val singlePurchaseString = "0x7ad2607e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000c40000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000b64ab834bab000000000000000000000000dd54d660178b28f6033a953b0e55073cfa7e374400000000000000000000000092ce36ceae648d6a57316cb67bd40199737c17a400000000000000000000000001656d41e041b50fc7c1eb270f7d891021937436000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045b594792a5cdc008d0de1c1d69faa3d16b3ddc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd54d660178b28f6033a953b0e55073cfa7e374400000000000000000000000001656d41e041b50fc7c1eb270f7d89102193743600000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c0107300000000000000000000000045b594792a5cdc008d0de1c1d69faa3d16b3ddc10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062406b0800000000000000000000000000000000000000000000000000000000632db961ba919330eac8d5ebca0addb6990ca632419a6be97d080eba240b0e074c4724db00000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062406b0800000000000000000000000000000000000000000000000000000000632db961ba919330eac8d5ebca0addb6990ca632419a6be97d080eba240b0e074c4724dba000000000000000000000000000000000000000000000000000000000000007c000000000000000000000000000000000000000000000000000000000000008e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000b40000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e59cff1ea75b0d93de6f08ebc7b51ede6b85d23b24c0d52d336762f82b167bc18f61b24eb2290ff0b9660b4e4e7a8da8d1cf3588493ca23934127c1e7ba5933b4771912bfddf60f2d7afaf79821605a9782933ab226beea4e3fbe6e0c81c58400000000000000000000000000000000000000000000000000000000000000e4fb16a59500000000000000000000000000000000000000000000000000000000000000000000000000000000000000004c9d38c11c1c72bdcb71199b82e8ba869599e099000000000000000000000000b552e0ddd94ea72dbc089619115c81529cd8ca700000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a59500000000000000000000000001656d41e041b50fc7c1eb270f7d8910219374360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b552e0ddd94ea72dbc089619115c81529cd8ca700000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe4000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc47846a7457660f1c585377cd173aa4811580ca31"
        executeTest(
            inputCallData = atomicSwapString,
            traceCallData = singlePurchaseString
        )
    }

    private suspend fun executeTest(inputCallData: String, traceCallData: String) {
        coEvery { traceProvider.traceAndFindAllCallsTo(any(), any(), any()) } returns
            listOf(traceCallData.toBinary()).map { SimpleTraceResult(from = Address.ZERO(), to = null, input = it) }
        coEvery { priceUpdateService.getAssetsUsdValue(any(), any(), any()) } returns null
        coEvery { priceUpdateService.getAssetsUsdValue(any(), any(), any()) } returns null
        coEvery { prizeNormalizer.normalize(any()) } returns BigDecimal.ZERO
        coEvery { prizeNormalizer.normalize(any()) } returns BigDecimal.ZERO

        val (log, transaction) = fakeLogAndTransaction(inputCallData)
        val date = Instant.now()
        val index = 0
        val totalLogs = 1

        val orders: List<OrderSideMatch> = descriptor.convert(
            log = log,
            transaction = transaction,
            timestamp = date.toEpochMilli(),
            index = index,
            totalLogs = totalLogs
        ).asFlow().toList()

        val buyOrder = orders[0]

        val expectedOriginsFees = listOf(
            Part(
                account = Address.apply("0x47846a7457660f1c585377cd173aa4811580ca31"),
                value = EthUInt256.of(300)
            )
        )
        assertEquals(Address.apply("0x4c9d38c11c1c72bdcb71199b82e8ba869599e099"), buyOrder.maker)
        assertEquals(expectedOriginsFees, buyOrder.originFees)
    }

    private fun fakeLogAndTransaction(inputCallData: String): Pair<Log, Transaction> {
        val log = Log.apply(
            /* logIndex = */ BigInteger.valueOf(72),
            /* transactionIndex = */ BigInteger.valueOf(0),
            /* transactionHash = */ Word.apply("0xb6d567672748f02cf922e3c46a4afb8619f70adc700a35163c00729fa23826c2"),
            /* blockHash = */ Word.apply("0x14ff6b9a323a573825ec9ad550f4f87acc3136c24ff1e53a7a85d47a4f4ea93a"),
            /* blockNumber = */ BigInteger.valueOf(10589739),
            /* address = */ Address.apply("0xdd54d660178b28f6033a953b0e55073cfa7e3744"),
            /* data = */ "0x00000000000000000000000000000000000000000000000000000000000000004648d60ac877da2d22158abc7bc20966bbe551a1a703612aeb0c67ebb3a5b3c5000000000000000000000000000000000000000000000000000000000000000a".toBinary(),
            /* removed = */ false,
            /* topics = */ JavaConverters.collectionAsScalaIterable(
                listOf(
                    Word.apply("0xc4109843e0b7d514e4c093114b863f8e7d8d9a458c372cd51bfe526b588006c9"),
                    Word.apply("0x0000000000000000000000005ddbe22b6f861ce101d122a518601269ddc53b06"),
                    Word.apply("0x00000000000000000000000095e4a09b554909badfd50044779896968ac3d7c9"),
                    Word.apply("0xb4771912bfddf60f2d7afaf79821605a9782933ab226beea4e3fbe6e0c81c584"),
                )
            ).toList(),
            /* type = */"mined"
        )

        val transaction = Transaction(
            /* hash = */ Word.apply("0xb6d567672748f02cf922e3c46a4afb8619f70adc700a35163c00729fa23826c2"),
            /* nonce = */ BigInteger.valueOf(2),
            /* blockHash = */ Word.apply("0x14ff6b9a323a573825ec9ad550f4f87acc3136c24ff1e53a7a85d47a4f4ea93a"),
            /* blockNumber = */ BigInteger.valueOf(10589739),
            /* creates = */ null,
            /* transactionIndex = */ BigInteger.valueOf(0),
            /* from = */ Address.apply("0x4c9d38c11c1c72bdcb71199b82e8ba869599e099"),
            /* to = */ Address.apply("0x92ce36ceae648d6a57316cb67bd40199737c17a4"),
            /* value = */ BigInteger.valueOf(0),
            /* gasPrice = */ BigInteger.valueOf(0),
            /* gas = */ BigInteger.valueOf(8000000),
            /* input = */ inputCallData.toBinary()
        )
        return Pair(log, transaction)
    }
}
