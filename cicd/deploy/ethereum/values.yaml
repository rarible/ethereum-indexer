global:
  blockchain: ethereum
  network: mainnet

ethereum-erc20-api:
  image:
    repository: ethereum-indexer-erc20-api
  replicas: 2
  service:
    enabled: true
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/erc20'
    SPRING_PROFILES_ACTIVE: '{{ .Values.global.blockchain }},{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }},consul'
    SPRING_DATA_MONGODB_DATABASE: protocol-ethereum-erc20
  nodeSelector:
    node.labels.rarible.service: true
  resources:
    jvm:
      xmx_megabytes: 356
      max_direct_memory_megabytes: 32
  updateConfig:
    order: start-first
  networks:
    common:
      - '{{ include "service.appEnv" $ }}-backend'
      - '{{ .Values.global.network }}-ethereum'

ethereum-erc20-listener:
  image:
    repository: ethereum-indexer-erc20-listener
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/erc20'
    SPRING_PROFILES_ACTIVE: '{{ .Values.global.blockchain }},{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }},consul'
    SPRING_DATA_MONGODB_DATABASE: protocol-ethereum-erc20
  nodeSelector:
    node.labels.rarible.job: true
  endpointMode: dnsrr
  resources:
    jvm:
      xmx_megabytes: 356
      max_direct_memory_megabytes: 32
  networks:
    common:
    - '{{ include "service.appEnv" $ }}-backend'
    - '{{ .Values.global.network }}-ethereum'

ethereum-gateway:
  image:
    repository: ethereum-indexer-gateway
  replicas: 2
  service:
    enabled: true
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol'
    SPRING_PROFILES_ACTIVE: ',consul,{{ .Values.global.blockchain }},{{ include "service.appEnv" $ }}'
  nodeSelector:
    node.labels.rarible.service: true
  resources:
    jvm:
      xmx_megabytes: 356
      max_direct_memory_megabytes: 32
  updateConfig:
    order: start-first
  networks:
    common:
    - '{{ include "service.appEnv" $ }}-backend'
    additional:
    - 'proxy-staging'

ethereum-order-api: 
  image:
    repository: ethereum-indexer-order-api
  replicas: 2
  service:
    enabled: true
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/order'
    SPRING_PROFILES_ACTIVE: '{{ .Values.global.blockchain }},{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }},consul'
    JAVA_OPTIONS: '-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp'
    SPRING_DATA_MONGODB_DATABASE: protocol-ethereum-order
  nodeSelector:
    node.labels.rarible.service: true
  resources:
    jvm:
      xmx_megabytes: 356
      max_direct_memory_megabytes: 32
  livenessProbe:
    initialDelaySeconds: 180s
  updateConfig:
    order: start-first
  networks:
    common:
      - '{{ include "service.appEnv" $ }}-backend'
      - '{{ .Values.global.network }}-ethereum'

ethereum-order-listener: 
  image:
    repository: ethereum-indexer-order-listener
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/order'
    SPRING_PROFILES_ACTIVE: '{{ .Values.global.blockchain }},{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }},consul'
    SPRING_DATA_MONGODB_DATABASE: protocol-ethereum-order
  nodeSelector:
    node.labels.rarible.job: true
  endpointMode: dnsrr
  resources:
    jvm:
      xmx_megabytes: 356
      max_direct_memory_megabytes: 32
  livenessProbe:
    initialDelaySeconds: 180s
  networks:
    common:
      - '{{ include "service.appEnv" $ }}-backend'
      - '{{ .Values.global.network }}-ethereum'

ethereum-order-migration:
  image:
    repository: ethereum-indexer-order-migration
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/order'
    SPRING_PROFILES_ACTIVE: '{{ .Values.global.blockchain }},{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }},consul'
    SPRING_DATA_MONGODB_DATABASE: protocol-ethereum-order
  nodeSelector:
    node.labels.rarible.job: true
  endpointMode: dnsrr
  resources:
    jvm:
      xmx_megabytes: 356
      max_direct_memory_megabytes: 32
  livenessProbe:
    initialDelaySeconds: 180s
  restartPolicy:
    condition: on-failure
  updateConfig:
    failure_action: continue
  networks:
    common:
      - '{{ include "service.appEnv" $ }}-backend'
      - '{{ .Values.global.network }}-ethereum'

ethereum-unlockable-api:
  image:
    repository: ethereum-indexer-unlockable-api
  replicas: 2
  service:
    enabled: true
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/unlockable'
    SPRING_PROFILES_ACTIVE: '{{ .Values.global.blockchain }},{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }},consul'
    SPRING_DATA_MONGODB_DATABASE: protocol-ethereum-unlockable
  nodeSelector:
    node.labels.rarible.service: true
  resources:
    jvm:
      xmx_megabytes: 356
      max_direct_memory_megabytes: 32
  updateConfig:
    order: start-first
  networks:
    common:
    - '{{ include "service.appEnv" $ }}-backend'

ethereum-nft-api: 
  image:
    repository: ethereum-indexer-nft-api
  replicas: 2
  service:
    enabled: true
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/nft'
    SPRING_PROFILES_ACTIVE: '{{ .Values.global.blockchain }},{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }},consul'
    SPRING_DATA_MONGODB_DATABASE: protocol-ethereum-nft
  nodeSelector:
    node.labels.rarible.service: true
  resources:
    jvm:
      xmx_megabytes: 456
      max_direct_memory_megabytes: 32
  livenessProbe:
    initialDelaySeconds: 180s
  updateConfig:
    order: start-first
  networks:
    common:
      - '{{ include "service.appEnv" $ }}-backend'
      - '{{ .Values.global.network }}-ethereum'

ethereum-nft-listener:
  image:
    repository: ethereum-indexer-nft-listener
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/nft'
    SPRING_PROFILES_ACTIVE: '{{ .Values.global.blockchain }},{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }},consul'
    SPRING_DATA_MONGODB_DATABASE: protocol-ethereum-nft
  nodeSelector:
    node.labels.rarible.job: true
  endpointMode: dnsrr
  resources:
    jvm:
      xmx_megabytes: 512
      max_direct_memory_megabytes: 32
  livenessProbe:
    initialDelaySeconds: 180s
  networks:
    common:
      - '{{ include "service.appEnv" $ }}-backend'
      - '{{ .Values.global.network }}-ethereum'

ethereum-nft-migration:
  image:
    repository: ethereum-indexer-nft-migration
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/nft'
    SPRING_PROFILES_ACTIVE: '{{ .Values.global.blockchain }},{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }},consul'
    SPRING_DATA_MONGODB_DATABASE: protocol-ethereum-nft
  nodeSelector:
    node.labels.rarible.job: true
  endpointMode: dnsrr
  resources:
    jvm:
      xmx_megabytes: 356
      max_direct_memory_megabytes: 32
  livenessProbe:
    initialDelaySeconds: 180s
  restartPolicy:
    condition: on-failure
  updateConfig:
    failure_action: continue
  networks:
    common:
      - '{{ include "service.appEnv" $ }}-backend'
      - '{{ .Values.global.network }}-ethereum'
